# This is a basic workflow to help you get started with Actions
<<<<<<< HEAD
name: Deploy to ECR Repository

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]

env:
  ECR_REPOSITORY: BBECRImage
  EKS_CLUSTER_NAME: BB_EKS_Cluster
  AWS_REGION: eu-west-1
  EKS_K8S_NAMESPACE: sock-shop

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

    steps:
    
    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v3.0.0
      
    - name: Check out code
      uses: actions/checkout@v4.1.1
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update kube config
      run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" deploy/kubernetes/complete-demo.yaml && \
        sed -i.bak "s|EKS_K8S_NAMESPACE|$EKS_K8S_NAMESPACE|g" deploy/kubernetes/complete-demo.yaml
        kubectl get nodes
        kubectl apply -f deploy/kubernetes/complete-demo.yaml -n $EKS_K8S_NAMESPACE

=======
name: Deploy to ECR Repository BB

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]

env:
  ECR_REPOSITORY: BBECRImage
  EKS_CLUSTER_NAME: BB_EKS_Cluster
  AWS_REGION: eu-west-1
  EKS_K8S_NAMESPACE: bbeksns

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

    steps:
    
    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v3.0.0
      
    - name: Check out code
      uses: actions/checkout@v4.1.1
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update kube config
      run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" deploy/kubernetes/complete-demo.yaml && \
        sed -i.bak "s|EKS_K8S_NAMESPACE|$EKS_K8S_NAMESPACE|g" deploy/kubernetes/complete-demo.yaml
        kubectl get nodes
        kubectl apply -f deploy/kubernetes/complete-demo.yaml -n $EKS_K8S_NAMESPACE

>>>>>>> da81c621f20cee9c2b3ef15d6019f13a49637a19
